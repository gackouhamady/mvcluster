name: Publish Sphinx docs

on:
  push:
    branches: [ main ]

# 0. Permissions n√©cessaires pour upload + deploy
permissions:
  contents: read        # pour checkout
  pages: write          # pour d√©ployer sur gh-pages
  id-token: write       # pour actions/deploy-pages

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. checkout
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. trouver le dossier source de la doc
    - name: Locate docs/source
      id: find_source
      run: |
        echo "üîç Searching for docs/source in possible locations..."
        POSSIBLE=(. mvcluster mvcluster/mvcluster)
        for D in "${POSSIBLE[@]}"; do
          if [ -d "$D/docs/source" ]; then
            echo "‚úÖ Found docs at $D/docs/source"
            echo "SOURCE_ROOT=$D" >> "$GITHUB_OUTPUT"
            break
          fi
        done
        if [ -z "${{ steps.find_source.outputs.SOURCE_ROOT }}" ]; then
          echo "‚ùå Error: docs/source not found in any of: ${POSSIBLE[*]}"
          exit 1
        fi

    # 3. setup Python + installer Sphinx
    - name: Setup Python & install Sphinx
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints

    # 4. build la doc
    - name: Build Sphinx documentation
      working-directory: ${{ steps.find_source.outputs.SOURCE_ROOT }}
      run: |
        echo "‚ÑπÔ∏è Building from $PWD/docs/source ‚Üí docs/build/html"
        ls -l docs
        sphinx-build -b html docs/source docs/build/html

    # 5. v√©rifier que le build a bien produit HTML
    - name: Locate built HTML
      id: find_build
      run: |
        BUILD_DIR="${{ steps.find_source.outputs.SOURCE_ROOT }}/docs/build/html"
        if [ -d "$BUILD_DIR" ]; then
          echo "‚úÖ Found built HTML at $BUILD_DIR"
          echo "BUILD_DIR=$BUILD_DIR" >> "$GITHUB_OUTPUT"
        else
          echo "‚ùå Error: build/html not found at $BUILD_DIR"
          exit 1
        fi

    # 6. upload de l‚Äôartifact Pages
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ${{ steps.find_build.outputs.BUILD_DIR }}

  deploy:
    # 7. d√©ploiement, en r√©cup√©rant l‚Äôartifact du job build
    needs: build
    runs-on: ubuntu-latest
    environment: github-pages

    steps:
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v1
