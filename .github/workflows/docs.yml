name: Publish Sphinx docs

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Locate docs/source
        id: find_source
        run: |
          echo "üîç Searching for docs/source in possible locations..."
          POSSIBLE=(. mvcluster mvcluster/mvcluster)
          FOUND=
          for D in "${POSSIBLE[@]}"; do
            if [ -d "$D/docs/source" ]; then
              echo "‚úÖ Found docs at $D/docs/source"
              echo "SOURCE_ROOT=$D" >> "$GITHUB_OUTPUT"
              FOUND=1
              break
            fi
          done
          if [ -z "$FOUND" ]; then
            echo "‚ùå Error: docs/source not found in any of: ${POSSIBLE[*]}"
            exit 1
          fi

      - name: Setup Python & install Sphinx
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints

      - name: Prepare _static directory
        working-directory: ${{ steps.find_source.outputs.SOURCE_ROOT }}
        run: |
          mkdir -p docs/source/_static
          echo "‚úÖ Ensured docs/source/_static exists"

      - name: Build Sphinx documentation
        working-directory: ${{ steps.find_source.outputs.SOURCE_ROOT }}
        run: |
          echo "‚ÑπÔ∏è Building docs from $PWD/docs/source ‚Üí docs/build/html"
          sphinx-build -b html docs/source docs/build/html

      - name: Verify build output
        id: find_build
        run: |
          BUILD="${{ steps.find_source.outputs.SOURCE_ROOT }}/docs/build/html"
          if [ -d "$BUILD" ]; then
            echo "‚úÖ Build dir found: $BUILD"
            echo "BUILD_DIR=$BUILD" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå Build dir missing: $BUILD"
            exit 1
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ steps.find_build.outputs.BUILD_DIR }}

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
